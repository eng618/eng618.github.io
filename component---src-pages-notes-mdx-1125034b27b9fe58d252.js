"use strict";(self.webpackChunkengarcia=self.webpackChunkengarcia||[]).push([[4658],{9622:function(e,n,t){t.r(n);var r=t(8453),a=t(6540);t(4794);function o(e){const n=Object.assign({p:"p",strong:"strong",pre:"pre",code:"code",h2:"h2"},(0,r.R)(),e.components),{PageDescription:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("PageDescription",!0),a.createElement(a.Fragment,null,a.createElement(t,null,a.createElement(n.p,null,"This is my ",a.createElement(n.strong,null,"Hidden")," notes landing page.")),"\n","\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-jsx"},'<>\n  {props.data.allMdx.group.map((group) => (\n    <div key={group.edges[0].node.id}>\n      <Title>{group.edges[0].node.frontmatter.category.toUpperCase()}</Title>\n      <CardGroup>\n        {group.edges.map((edge) => (\n          <MiniCard key={edge.node.frontmatter.title} title={edge.node.frontmatter.title} actionIcon="arrowRight" />\n        ))}\n      </CardGroup>\n    </div>\n  ))}\n</>\n')),"\n",a.createElement(n.h2,null,"TODO"),"\n",a.createElement(n.p,null,"Need to create a query that accepts un-categorized notes."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},'// old query\nexport const pageQuery = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: "notes" } }) {\n      edges {\n        node {\n          id\n          childMdx {\n            frontmatter {\n              author\n              category\n              date\n              description\n              keywords\n              title\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n')),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-js"},"export const pageQuery = graphql`\n  {\n    allMdx {\n      group(field: { frontmatter: { category: SELECT } }) {\n        edges {\n          node {\n            frontmatter {\n              category\n              description\n              title\n            }\n            id\n            timeToRead\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n")))}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.R)(),e.components);return n?a.createElement(n,e,a.createElement(o,e)):o(e)}}}]);
//# sourceMappingURL=component---src-pages-notes-mdx-1125034b27b9fe58d252.js.map