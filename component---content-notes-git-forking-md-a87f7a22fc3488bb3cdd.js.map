{"version":3,"file":"component---content-notes-git-forking-md-a87f7a22fc3488bb3cdd.js","mappings":"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","sources":["webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://engarcia/./content/notes/git/forking.md"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"cds--grid\">\n      <div className=\"cds--row\">\n        <div className=\"cds--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageHeader-module--cds--assistive-text--I8gpo\";\nexport var cdsVisuallyHidden = \"PageHeader-module--cds--visually-hidden--jqQfD\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var hideFeedback = \"PageHeader-module--hide-feedback--+q7Fw\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var showFeedback = \"PageHeader-module--show-feedback--EMXIa\";\nexport var skeleton = \"PageHeader-module--skeleton--AoALn\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`cds--row ${row}`}>\n      <div className=\"cds--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"EditLink-module--cds--assistive-text---m2Du\";\nexport var cdsVisuallyHidden = \"EditLink-module--cds--visually-hidden--4eptr\";\nexport var hideFeedback = \"EditLink-module--hide-feedback--Ytd5G\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";\nexport var showFeedback = \"EditLink-module--show-feedback--jINtp\";\nexport var skeleton = \"EditLink-module--skeleton--Zn936\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"cds--grid\">\n          <div className=\"cds--row\">\n            <div className=\"cds--col-lg-12 cds--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageTabs-module--cds--assistive-text--bPTpJ\";\nexport var cdsVisuallyHidden = \"PageTabs-module--cds--visually-hidden--qiCJc\";\nexport var hideFeedback = \"PageTabs-module--hide-feedback--IY0ME\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var showFeedback = \"PageTabs-module--show-feedback--3+Yhf\";\nexport var skeleton = \"PageTabs-module--skeleton--CuOaQ\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"last-modified-date-module--cds--assistive-text--k+X4+\";\nexport var cdsVisuallyHidden = \"last-modified-date-module--cds--visually-hidden--ry7oZ\";\nexport var hideFeedback = \"last-modified-date-module--hide-feedback--ahSi+\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var showFeedback = \"last-modified-date-module--show-feedback--Td93+\";\nexport var skeleton = \"last-modified-date-module--skeleton--a42vU\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/eng618.github.io/eng618.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://stackoverflow.com/questions/9153598/how-do-i-fetch-a-branch-on-someone-elses-fork-on-github\"\n      }}>{`Source`}</a></p>\n    <p>{`When needing to work with a new branch on a forked repo you have to create a new branch in your local fork that references that branch. This can be accomplished by:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git remote add theirUsername git@github.com:theirUsername/repoName.git\ngit fetch theirUsername\ngit checkout -b my_name_for_their_branch theirUsername/theirBranch\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <p>{`Following directions for `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.ibm.com/MFPSamples/DevCenter/wiki/Keep-fork-in-sync\"\n      }}>{`Keeping your fork in sync`}</a>{` for the DevCetner.`}</p>\n    <p>{`In this example I will be demonstrating creating a `}<inlineCode parentName=\"p\">{`GA`}</inlineCode>{` branch from `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{`, in my local environment. I will be prefixing the remote `}<inlineCode parentName=\"p\">{`GA`}</inlineCode>{` branch with my initials to have a differentiation between the `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` branch and my local (forked) copy.`}</p>\n    <p>{`You can set `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` as the repo to follow (`}<strong parentName=\"p\">{`userName`}</strong>{`)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git remote add upstream git@github.ibm.com:MFPSamples/DevCenter\n`}</code></pre>\n    <p>{`Once this is done your are free to `}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`pull`}</inlineCode>{` code from the `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` witch is the source repo for all changes (representing another `}<strong parentName=\"p\">{` userName`}</strong>{`).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git fetch upstream\ngit merge upstream/master\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` This is assuming you are trying to merge to you local (forked) `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` branch`}</p>\n    <p>{`If you need to work off a branch that is in the `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` but not in your local repository (forked) you can create it with a link to upstream as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git checkout -b ENG-GA upstream/GA\n`}</code></pre>\n    <p>{`This line creates a local branch `}<inlineCode parentName=\"p\">{`ENG-GA`}</inlineCode>{` based on `}<inlineCode parentName=\"p\">{`upstream/GA`}</inlineCode>{`. So now you can make updates to your local repo `}<inlineCode parentName=\"p\">{`ENG-GA`}</inlineCode>{` and then push it back to `}<inlineCode parentName=\"p\">{`upstream/GA`}</inlineCode>{` which should help reduce merge conflicts. You still want to be sure to keep your local (forked) branch up to date if your changes will happen over time. Periodically you will need to merge `}<inlineCode parentName=\"p\">{`upstream/GA`}</inlineCode>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git fetch upstream\ngit merge upstream/GA\n`}</code></pre>\n    <p>{`Once you are ready to submit your changes back to upstream you can create a pull request via `}<a parentName=\"p\" {...{\n        \"href\": \"github.ibm.com\"\n      }}><em parentName=\"a\">{`github.com`}</em></a>{`. Ensuring that your base branch is `}<inlineCode parentName=\"p\">{`GA`}</inlineCode>{` and the head branch is `}<inlineCode parentName=\"p\">{`ENG-GA`}</inlineCode>{`. See image for details.`}</p>\n    <img {...{\n      \"src\": \"./git-pull-request.png\",\n      \"alt\": \"Pull Request\"\n    }}></img>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}