{"version":3,"file":"component---content-notes-git-gitignore-md-2aaadb0a5e20833a6759.js","mappings":"yIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,OAAQ,SACRC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,4BAA6B,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,6JAA8J,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CAC1ZO,UAAW,iBACV,+BAAgC,KAAMD,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,wBAAyB,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,6CAA8CQ,EAAAA,cAAoBZ,EAAYO,OAAQ,KAAM,cAAe,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oEAAqE,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACrjBO,UAAW,iBACV,qCAAwC,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,+EAAgF,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACtTO,UAAW,iBACV,2BAA4B,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,2BAA4B,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CACtPO,UAAW,iBACV,gBAAiB,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,cAAe,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,CAC9NO,UAAW,iBACV,gDAAmD,MAAO,MAC/D,CAKA,UAJA,SAAoBd,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./content/notes/git/gitignore.md"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Untracking a single file\"), \"\\n\", React.createElement(_components.p, null, \"To untrack a single file that has already been added/initialized to your repository, i.e., stop tracking the file but not delete it from your system use:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git rm --cached filename\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Untracking all files\"), \"\\n\", React.createElement(_components.p, null, \"To untrack every file that is now in your \", React.createElement(_components.strong, null, \".gitignore\"), \":\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Commit any outstanding code changes, and then, run this command:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git commit -m \\\"Commit message\\\"\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"This removes any changed files from the index(staging area), then just run:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git rm -r --cached .\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Add all tracked changes\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git add .\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Commit it:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git commit -m \\\".gitignore is now working\\\"\\n\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","strong","ol","li","_provideComponents","components","React","className","wrapper","MDXLayout"],"sourceRoot":""}