{"version":3,"file":"component---content-notes-git-merge-conflicts-md-3aacc09effe713eac4bf.js","mappings":"yIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,+BAAgC,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,0CAA2C,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC1SI,UAAW,iBACV,sFAAuF,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,gCAAiC,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC/PI,UAAW,iBACV,kCAAmC,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,qDAAsD,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,uEAAwE,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACvVI,UAAW,iBACV,qBAAsB,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,gFAAiF,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC9OI,UAAW,iBACV,oBAAqB,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,0CAA2C,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACvMI,UAAW,iBACV,qBACL,CAKA,UAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./content/notes/git/merge_conflicts.md"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Local changes to same files\"), \"\\n\", React.createElement(_components.p, null, \"To resolve merge conflicts with error.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"error: Your local changes to the following files would be overwritten by merge:\\n\")), \"\\n\", React.createElement(_components.p, null, \"To stash entire working tree\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git stash save --keep-index\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now you will be able to merge branch successfully\"), \"\\n\", React.createElement(_components.p, null, \"If you do not need your local changes you can simple drop the stash\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git stash drop\\n\")), \"\\n\", React.createElement(_components.p, null, \"orâ€¦if you need your changes you can attempt to process them in now using pop\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git stash pop\\n\")), \"\\n\", React.createElement(_components.p, null, \"To show what is in your stash use show\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git stash show\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout"],"sourceRoot":""}