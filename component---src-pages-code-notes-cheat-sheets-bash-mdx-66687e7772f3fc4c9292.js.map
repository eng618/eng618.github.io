{"version":3,"file":"component---src-pages-code-notes-cheat-sheets-bash-mdx-66687e7772f3fc4c9292.js","mappings":"yIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,KAAsBR,EAAMS,aAAa,gBAACC,GAAmBT,EAEhE,OADKS,GAaP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAfwBG,CAAqB,mBAAmB,GACvDC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBL,EAAiB,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,sCAAuC,KAAMW,EAAAA,cAAoBd,EAAYI,GAAI,KAAM,8DAA+D,KAAMU,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,CAChXS,UAAW,iBACXC,SAAU,6CACT,mEAAsE,KAAMF,EAAAA,cAAoBd,EAAYI,GAAI,KAAM,+BAAgC,KAAMU,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,iJAAkJ,KAAMW,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,CAC/aS,UAAW,kBACV,cACL,CAKA,UAJA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOU,EAAYJ,EAAAA,cAAoBI,EAAWnB,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./src/pages/code-notes/cheat-sheets/bash.mdx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {PageDescription} = _components;\n  if (!PageDescription) _missingMdxReference(\"PageDescription\", true);\n  return React.createElement(React.Fragment, null, React.createElement(PageDescription, null, React.createElement(_components.p, null, \"This page holds bash cheat sheets\")), \"\\n\", React.createElement(_components.h2, null, \"Finding file with particular extensions to open in vs code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\",\n    metaData: \"path=https://stackoverflow.com/a/69690491\"\n  }, \"find . -iname \\\"*\\\\.{file-extension}\\\" -print0 | xargs -0 code\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Printing the last exit code\"), \"\\n\", React.createElement(_components.p, null, \"Sometimes you need to read the exit code of the last ran command, to check it if succeeded or failed. To do so exicute the following command.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"echo $?\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","pre","code","_provideComponents","components","PageDescription","id","component","Error","_missingMdxReference","React","className","metaData","wrapper","MDXLayout"],"sourceRoot":""}