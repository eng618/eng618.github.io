{"version":3,"file":"component---content-notes-osx-background-md-0332674423ae31b90f23.js","mappings":"yIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,uCAAwC,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,+BAAgCK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,KAAM,sDAAuD,KAAMI,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,0CAA2C,KAAMK,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,CAC1eK,UAAW,iBACV,WAAY,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,sCAAuC,KAAMK,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,CAC1LK,UAAW,iBACV,yBAA0B,KAAMD,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,CAC3NK,UAAW,iBACV,uBAAwB,KAAMD,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,mBAAoB,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,oFAAqFK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,kBAAmB,oCAAqCI,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,QAAS,oEAAqE,KAAMI,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,CACthBK,UAAW,iBACV,sBACL,CAKA,UAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./content/notes/osx/background.md"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Running processes in the background\"), \"\\n\", React.createElement(_components.p, null, \"When running a command, add \", React.createElement(_components.code, null, \"&\"), \" at the end to run that process in the background.\"), \"\\n\", React.createElement(_components.p, null, \"To see a list of background jobs, use:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"jobs\\n\")), \"\\n\", React.createElement(_components.p, null, \"To kill a background process, use:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"kill %<job number>\\n\")), \"\\n\", React.createElement(_components.p, null, \"To bring a background process to the foreground, use:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"fg %<job number>\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Java background\"), \"\\n\", React.createElement(_components.p, null, \"If an MFPF server fails to start (due to a process already running), you can use \", React.createElement(_components.code, null, \"lsof -i:<port>\"), \" to list processes on a specific \", React.createElement(_components.code, null, \"port\"), \". If you want to kill all Java processes in the background, run:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"killall -9 java\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","pre","_provideComponents","components","React","className","wrapper","MDXLayout"],"sourceRoot":""}