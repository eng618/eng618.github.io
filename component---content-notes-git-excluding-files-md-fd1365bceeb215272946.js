"use strict";(self.webpackChunkengarcia=self.webpackChunkengarcia||[]).push([[9340],{2296:function(e,t,a){a.d(t,{Z:function(){return v}});var n=a(7294),l=a(8650),r=a.n(l),i=a(1082),o=a(5446),s=a(9821),c=a(5900),d=a.n(c),u=function(e){var t,a=e.title,l=e.theme,r=e.tabs,i=void 0===r?[]:r;return n.createElement("div",{className:d()("PageHeader-module--page-header--36a7c",(t={},t["PageHeader-module--with-tabs--bdb43"]=i.length,t["PageHeader-module--dark-mode--58278"]="dark"===l,t))},n.createElement("div",{className:"cds--grid"},n.createElement("div",{className:"cds--row"},n.createElement("div",{className:"cds--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--12bd8"},a)))))},m=function(e){var t=e.relativePagePath,a=e.repository,l=(0,i.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||l,o=r.baseUrl,s=r.subDirectory,c=o+"/edit/"+r.branch+s+"/src/pages"+t;return o?n.createElement("div",{className:"cds--row EditLink-module--row--04499"},n.createElement("div",{className:"cds--col"},n.createElement("a",{className:"EditLink-module--link--203ae",href:c},"Edit this page on GitHub"))):null},p=a(849),g=a(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,l=e.slug,o=l.split("/").filter(Boolean).slice(-1)[0],s=a.map((function(e){var t,a=r()(e,{lower:!0,strict:!0}),s=a===o,c=new RegExp(o+"/?(#.*)?$"),u=l.replace(c,a);return n.createElement("li",{key:e,className:d()((t={},t["PageTabs-module--selected-item--68107"]=s,t),"PageTabs-module--list-item--d36e2")},n.createElement(i.Link,{className:"PageTabs-module--link--2b3ff",to:""+u},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--09d7f"},n.createElement("div",{className:"cds--grid"},n.createElement("div",{className:"cds--row"},n.createElement("div",{className:"cds--col-lg-12 cds--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--c4bab"},s))))))},t}(n.Component),h=k,f=a(5391),b=a(5387),E=a(4389),N=function(e){var t=e.date,a=new Date(t);return t?n.createElement(E.X2,{className:"last-modified-date-module--row--5c9a1"},n.createElement(E.sg,null,n.createElement("div",{className:"last-modified-date-module--text--a203d"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},v=function(e){var t=e.pageContext,a=e.children,l=e.location,c=e.Title,d=t.frontmatter,g=void 0===d?{}:d,k=t.relativePagePath,E=t.titleType,v=g.tabs,y=g.title,w=g.theme,P=g.description,x=g.keywords,T=g.date,C=(0,b.Z)().interiorTheme,I=(0,i.useStaticQuery)("2456312558").site.pathPrefix,L=I?l.pathname.replace(I,""):l.pathname,Z=v?L.split("/").filter(Boolean).slice(-1)[0]||r()(v[0],{lower:!0}):"",M=w||C;return n.createElement(s.Z,{tabs:v,homepage:!1,theme:M,pageTitle:y,pageDescription:P,pageKeywords:x,titleType:E},n.createElement(u,{title:c?n.createElement(c,null):y,label:"label",tabs:v,theme:M}),v&&n.createElement(h,{title:y,slug:L,tabs:v,currentTab:Z}),n.createElement(f.Z,{padded:!0},a,n.createElement(m,{relativePagePath:k}),n.createElement(N,{date:T})),n.createElement(p.Z,{pageContext:t,location:l,slug:L,tabs:v,currentTab:Z}),n.createElement(o.Z,null))}},5870:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return d}});var n=a(3366),l=(a(7294),a(4983)),r=a(2296),i=["components"],o={},s={_frontmatter:o},c=r.Z;function d(e){var t=e.components,a=(0,n.Z)(e,i);return(0,l.kt)(c,Object.assign({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",null,"Ignoring tracked files in your local repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git update-index --skip-worktree SOME_FILE\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git update-index --assume-unchanged SOME_FILE\n")),(0,l.kt)("p",null,"To undo assume unchanged"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git update-index --no-assume-unchanged SOME_FILE\n")),(0,l.kt)("p",null,"If using ",(0,l.kt)("inlineCode",{parentName:"p"},"assume-unchanged")," you can add the following to your ",(0,l.kt)("strong",{parentName:"p"},"~/.gitconfig")),(0,l.kt)("p",null,"This will allow you to use the alias ",(0,l.kt)("inlineCode",{parentName:"p"},"git ignored")," to list all excluded files"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'[alias]\n    ignored = !git ls-files -v | grep "^[[:lower:]]"\n')),(0,l.kt)("h2",null,"Ignoring un-tracked files in your local repo"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Untested")),(0,l.kt)("p",null,"If you ever want to ignore a file from git, but don’t want to add it to the ",(0,l.kt)("strong",{parentName:"p"},".gitignore")," file, you can do it on your local copy by adding it to the file ",(0,l.kt)("strong",{parentName:"p"},".git/info/exclude")),(0,l.kt)("p",null,"I’ve setup an alias to do so, just add this to your ",(0,l.kt)("strong",{parentName:"p"},".gitconfig")," file under the ",(0,l.kt)("inlineCode",{parentName:"p"},"[alias]")," section"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"exclude = !sh -c 'echo \"$1\" >> .git/info/exclude' -\n")),(0,l.kt)("p",null,"Then you can execute:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git exclude SOME_FILE\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---content-notes-git-excluding-files-md-fd1365bceeb215272946.js.map