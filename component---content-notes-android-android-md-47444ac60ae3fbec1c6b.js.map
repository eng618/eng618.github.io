{"version":3,"file":"component---content-notes-android-android-md-47444ac60ae3fbec1c6b.js","mappings":"yIAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,KAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,WAAY,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,2BAA4B,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,2DAA4D,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,uCAAwC,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,uHAAwHK,EAAAA,cAAoBZ,EAAYQ,KAAM,KAAM,+CAAgD,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,aAAc,KAAMK,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,iJAAkJ,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,iGAAkG,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,oFAAqF,MAAO,KAAMK,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,6DAA8DK,EAAAA,cAAoBZ,EAAYS,IAAK,KAAM,0HAA2H,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,KAAM,qDAAsD,MAAO,MAC7+D,CAKA,UAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,KAAsBX,EAAMY,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWf,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./content/notes/android/android.md"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\",\n    code: \"code\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Eclipse\"), \"\\n\", React.createElement(_components.h3, null, \"Download the ADT Plugin\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Start Eclipse, then select Help > Install New Software.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click Add, in the top-right corner.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Add Repository dialog that appears, enter “ADT Plugin” for the Name and the following URL for the Location:\\n\", React.createElement(_components.code, null, \"https://dl-ssl.google.com/android/eclipse/\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Click OK.\"), \"\\n\", React.createElement(_components.p, null, \"If you have trouble acquiring the plugin, try using “http” in the Location URL, instead of “https” (https is preferred for security reasons).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the Available Software dialog, select the checkbox next to Developer Tools and click Next.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In the next window, you’ll see a list of the tools to be downloaded. Click Next.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Read and accept the license agreements, then click Finish.\", React.createElement(_components.br), \"\\n\", \"If you get a security warning saying that the authenticity or validity of the software can’t be established, click OK.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"When the installation completes, restart Eclipse.\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","ol","li","p","code","br","_provideComponents","components","React","wrapper","MDXLayout"],"sourceRoot":""}