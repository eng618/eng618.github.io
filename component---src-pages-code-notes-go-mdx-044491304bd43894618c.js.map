{"version":3,"file":"component---src-pages-code-notes-go-mdx-044491304bd43894618c.js","mappings":"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","sources":["webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://engarcia/./src/pages/code-notes/go.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"cds--grid\">\n      <div className=\"cds--row\">\n        <div className=\"cds--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageHeader-module--cds--assistive-text--I8gpo\";\nexport var cdsVisuallyHidden = \"PageHeader-module--cds--visually-hidden--jqQfD\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var hideFeedback = \"PageHeader-module--hide-feedback--+q7Fw\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var showFeedback = \"PageHeader-module--show-feedback--EMXIa\";\nexport var skeleton = \"PageHeader-module--skeleton--AoALn\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`cds--row ${row}`}>\n      <div className=\"cds--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"EditLink-module--cds--assistive-text---m2Du\";\nexport var cdsVisuallyHidden = \"EditLink-module--cds--visually-hidden--4eptr\";\nexport var hideFeedback = \"EditLink-module--hide-feedback--Ytd5G\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";\nexport var showFeedback = \"EditLink-module--show-feedback--jINtp\";\nexport var skeleton = \"EditLink-module--skeleton--Zn936\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"cds--grid\">\n          <div className=\"cds--row\">\n            <div className=\"cds--col-lg-12 cds--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageTabs-module--cds--assistive-text--bPTpJ\";\nexport var cdsVisuallyHidden = \"PageTabs-module--cds--visually-hidden--qiCJc\";\nexport var hideFeedback = \"PageTabs-module--hide-feedback--IY0ME\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var showFeedback = \"PageTabs-module--show-feedback--3+Yhf\";\nexport var skeleton = \"PageTabs-module--skeleton--CuOaQ\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"last-modified-date-module--cds--assistive-text--k+X4+\";\nexport var cdsVisuallyHidden = \"last-modified-date-module--cds--visually-hidden--ry7oZ\";\nexport var hideFeedback = \"last-modified-date-module--hide-feedback--ahSi+\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var showFeedback = \"last-modified-date-module--show-feedback--Td93+\";\nexport var skeleton = \"last-modified-date-module--skeleton--a42vU\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/eng618.github.io/eng618.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This page is a collection of tips and tricks I’ve come to learn about the Go programing language.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Slice: Append & Prepend</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Tools as dependencies</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Additional References</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Slice: Append & Prepend`}</h2>\n    <p>{`To append and prepend you would use the same build in `}<inlineCode parentName=\"p\">{`append`}</inlineCode>{` go method. The only difference is the oder in which you supply the`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`xi := []int{2,3,4}\n\n// append the number 5\nxi = append(xi, 5)\nfmt.Println(xi)\n// [2 3 4 5]\n\n// prepend the number 1\nxi = append([]int{1}, xi...)\nfmt.Println(xi)\n// [1 2 3 4 5]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://go.dev/play/p/P-InPKinGob\"\n        }}>{`Go Playground`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://pkg.go.dev/builtin?utm_source=gopls#append\"\n        }}>{`Go docs`}</a></li>\n    </ul>\n    <p>{`Explanation:`}</p>\n    <p>{`The arguments for append are a slice (first argument), and the 2nd and further\narguments are elements you are looking to append to the slice.`}</p>\n    <p>{`So for a standard append you pass it your starting slice, and then any number\nof elements you wish to append.`}</p>\n    <p>{`For the prepend, you have to pass that starting element in as a slice, you you\nhave to define the slice and type with its literal value. Then for the second\nargument you unfirl (not sure the proper term here) the slice with `}<inlineCode parentName=\"p\">{`...`}</inlineCode>{`. This\ntells go to pass in the individual values help by that slice rather than the\nslice itself.`}</p>\n    <h2>{`Tools as dependencies`}</h2>\n    <p>{`There is a pattern to track tools as dependencies in Go. This is used when you need tools to build your project or generate code for protos, mocks, or any other tools. This pattern is used when those tools are not imported in any files but used by the developer to build the project.`}</p>\n    <p>{`The simplest way to achieve this is to add a `}<strong parentName=\"p\">{`tools.go`}</strong>{` file to the root of your project. This will serve as an individual package. While the name of this package and file are not important, using a descriptive name is always helpful.`}</p>\n    <p>{`In this file you must add the go directive `}<inlineCode parentName=\"p\">{`// +build tools`}</inlineCode>{`, and then make sure all tools are listed, in the `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` section. All the tools should be prefixed with `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{`, which shows that it is not explicitly imported anywhere else, but is required for the package.`}</p>\n    <p>{`A simple example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\",\n        \"metastring\": \"path=path/to/project/tools.go\",\n        \"path\": \"path/to/project/tools.go\"\n      }}>{`// +build tools\n\npackage tools\n\nimport (\n    _ \"github.com/path/to/some/tool\"\n)\n`}</code></pre>\n    <Title mdxType=\"Title\">Sources</Title>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/go-modules-by-example/index/blob/master/010_tools/README.md\"\n        }}>{`wiki walk through`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/go-modules-by-example/tools\"\n        }}>{`example project`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/golang/go/wiki/Modules#how-can-i-track-tool-dependencies-for-a-module\"\n        }}>{`How can I track tool dependencies for a module?`}</a></li>\n    </ul>\n    <h2>{`Additional References`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Links</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Comparisons</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Links`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://devhints.io/go\"\n        }}>{`Go cheatsheet`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://go.dev/play/\"\n        }}>{`Go Playground`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://goplay.space/\"\n        }}>{`Go Play Space`}</a>{` - an alternative to Go playground with syntax highlighting and inline documentation.`}</li>\n    </ul>\n    <h3>{`Comparisons`}</h3>\n    <h4>{`Logging frameworks`}</h4>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/sirupsen/logrus\"\n        }}>{`Logrus`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/uber-go/zap\"\n        }}>{`Zap: by Uber`}</a></li>\n    </ul>\n    <p>{`This article compares logrus with zap. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.libhunt.com/compare-logrus-vs-zap\"\n      }}>{`https://www.libhunt.com/compare-logrus-vs-zap`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","small","isMDXComponent"],"sourceRoot":""}