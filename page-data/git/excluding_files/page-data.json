{"componentChunkName":"component---content-notes-git-excluding-files-md","path":"/git/excluding_files/","result":{"pageContext":{"frontmatter":{"layout":"note","title":"Excluding Files","author":"Eric Garcia","last_updated":"2016-07-14T00:00:00.000Z","category":"git"},"relativePagePath":"/home/runner/work/eng618.github.io/eng618.github.io/content/notes/git/excluding_files.md","titleType":"prepend","MdxNode":{"id":"ff928afc-db35-5ec8-bebf-ff35d84f2865","children":[],"parent":"1687cfee-8f32-584c-9f14-6506287cada9","internal":{"content":"---\nlayout: note\ntitle: \"Excluding Files\"\nauthor: \"Eric Garcia\"\nlast_updated: 2016-07-14\ncategory: git\n---\n\n## Ignoring tracked files in your local repo\n\n```bash\ngit update-index --skip-worktree SOME_FILE\n```\n\nor\n\n```bash\ngit update-index --assume-unchanged SOME_FILE\n```\n\nTo undo assume unchanged\n\n```bash\ngit update-index --no-assume-unchanged SOME_FILE\n```\n\nIf using `assume-unchanged` you can add the following to your **~/.gitconfig**\n\nThis will allow you to use the alias `git ignored` to list all excluded files\n\n```bash\n[alias]\n\tignored = !git ls-files -v | grep \"^[[:lower:]]\"\n```\n\n## Ignoring un-tracked files in your local repo\n\n> Untested\n\nIf you ever want to ignore a file from git, but don't want to add it to the **.gitignore** file, you can do it on your local copy by adding it to the file **.git/info/exclude**\n\nI've setup an alias to do so, just add this to your **.gitconfig** file under the `[alias]` section\n\n```bash\nexclude = !sh -c 'echo \"$1\" >> .git/info/exclude' -\n```\n\nThen you can execute:\n\n```bash\ngit exclude SOME_FILE\n```\n","type":"Mdx","contentDigest":"7b9e80a4ce03b1f18417f0d7dd87b75d","owner":"gatsby-plugin-mdx","counter":140},"frontmatter":{"layout":"note","title":"Excluding Files","author":"Eric Garcia","last_updated":"2016-07-14T00:00:00.000Z","category":"git"},"exports":{},"rawBody":"---\nlayout: note\ntitle: \"Excluding Files\"\nauthor: \"Eric Garcia\"\nlast_updated: 2016-07-14\ncategory: git\n---\n\n## Ignoring tracked files in your local repo\n\n```bash\ngit update-index --skip-worktree SOME_FILE\n```\n\nor\n\n```bash\ngit update-index --assume-unchanged SOME_FILE\n```\n\nTo undo assume unchanged\n\n```bash\ngit update-index --no-assume-unchanged SOME_FILE\n```\n\nIf using `assume-unchanged` you can add the following to your **~/.gitconfig**\n\nThis will allow you to use the alias `git ignored` to list all excluded files\n\n```bash\n[alias]\n\tignored = !git ls-files -v | grep \"^[[:lower:]]\"\n```\n\n## Ignoring un-tracked files in your local repo\n\n> Untested\n\nIf you ever want to ignore a file from git, but don't want to add it to the **.gitignore** file, you can do it on your local copy by adding it to the file **.git/info/exclude**\n\nI've setup an alias to do so, just add this to your **.gitconfig** file under the `[alias]` section\n\n```bash\nexclude = !sh -c 'echo \"$1\" >> .git/info/exclude' -\n```\n\nThen you can execute:\n\n```bash\ngit exclude SOME_FILE\n```\n","fileAbsolutePath":"/home/runner/work/eng618.github.io/eng618.github.io/content/notes/git/excluding_files.md"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}