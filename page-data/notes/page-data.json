{
    "componentChunkName": "component---src-pages-notes-mdx",
    "path": "/notes/",
    "result": {"data":{"allMdx":{"group":[{"edges":[{"node":{"frontmatter":{"category":"Development","description":null,"title":"Jekyll"},"id":"edc7f67a-d9a3-595b-99fe-38cf06fe458c","slug":"development/jekyll","timeToRead":1,"excerpt":"source Specifying a  :path  attribute will install the gem from that path on your local machine. Alternately, specifying a  :git  attribute…"}}]},{"edges":[{"node":{"frontmatter":{"category":"android","description":null,"title":"Android"},"id":"78839c4b-685c-5c86-8be2-cb6d772f8c79","slug":"android/android","timeToRead":1,"excerpt":"Eclipse Download the ADT Plugin Start Eclipse, then select Help > Install New Software. Click Add, in the top-right corner. In the Add…"}}]},{"edges":[{"node":{"frontmatter":{"category":"docker","description":null,"title":"Docker"},"id":"87c79b19-6372-5f6d-bf97-9c42ddfa0cca","slug":"docker/docker","timeToRead":1,"excerpt":"Jump to : TOC\n{:toc} Overview Useful notes and references revolving around docker."}}]},{"edges":[{"node":{"frontmatter":{"category":"git","description":null,"title":"Amending a Commit Message"},"id":"7178584c-e0e1-5259-9294-08b445dc7abf","slug":"git/amending_commit_message","timeToRead":1,"excerpt":"To open your editor, allowing you to change the commit message of the most recent commit. Additionally, you can set the commit message…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Git Branching"},"id":"27ce874d-5a73-5911-a360-68f674787adb","slug":"git/branching","timeToRead":1,"excerpt":"I follow git branching naming convention outline in this  gist List all branches including remotes Resetting local branch to match remote…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Git Clean"},"id":"ba26fac7-7b17-532e-870f-f4986f53ccbe","slug":"git/clean","timeToRead":1,"excerpt":"Perform a “dry run” of  git clean . This will show you which files are going to be removed without actually doing it. Remove untracked files…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Git Diff"},"id":"78327ff3-ddfe-51c5-9f17-f0b16edb0989","slug":"git/diff","timeToRead":1,"excerpt":"Simply use  git diff  and a file name to check difference between commited and non staged changes If you need to verify the difference of a…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Excluding Files"},"id":"ff928afc-db35-5ec8-bebf-ff35d84f2865","slug":"git/excluding_files","timeToRead":1,"excerpt":"Ignoring tracked files in your local repo or To undo assume unchanged If using  assume-unchanged  you can add the following to your…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Working with Forked Repositories"},"id":"54707999-596c-502f-addb-b440474a3350","slug":"git/forking","timeToRead":1,"excerpt":"Source When needing to work with a new branch on a forked repo you have to create a new branch in your local fork that references that…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Updating .gitignore"},"id":"77f815e8-4c9e-503d-8905-6d7bedbb782e","slug":"git/gitignore","timeToRead":1,"excerpt":"Untracking a single file To untrack a single file that has already been added/initialized to your repository, i.e., stop tracking the file…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Resolving Merge Conflicts"},"id":"f96cfd5a-033f-58c1-bacb-9fc53cfa9778","slug":"git/merge_conflicts","timeToRead":1,"excerpt":"Local changes to same files To resolve merge conflicts with error. To stash entire working tree Now you will be able to merge branch…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"Reverting last commit"},"id":"d229d0cd-d659-5ac2-9663-d97a2e6d9b33","slug":"git/undo-last-commit","timeToRead":1,"excerpt":"source source Delete the most recent commit, keeping the work you've done: git reset --soft HEAD~1 Delete the most recent commit, destroying…"}},{"node":{"frontmatter":{"category":"git","description":null,"title":"git"},"id":"72429e07-eb32-5fef-9bff-4f513a3e6ea2","slug":"code-notes/git","timeToRead":5,"excerpt":"This page is designed to unify all the tips and tricks associated with using git. Please feel free to modify and update as needed. Commits…"}}]},{"edges":[{"node":{"frontmatter":{"category":"osx","description":null,"title":"Background Processes"},"id":"5d53babe-e0cc-5b3f-a153-98035ebb9c75","slug":"osx/background","timeToRead":1,"excerpt":"Running processes in the background When running a command add  &  at the end and this will cause that process to run in the background To…"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"Setting up your OSX development environment"},"id":"d871fef7-7f20-5ac1-aff1-5c1f736bf9c4","slug":"osx/dev-environment","timeToRead":1,"excerpt":"Table of Contents: TOC\n{:toc} Overview In this document we will explore different aspects of setting up your Macbook for for development…"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"Homebrew"},"id":"660c5ccd-2a2f-5b2c-bdb9-aebb1f573975","slug":"osx/homebrew","timeToRead":1,"excerpt":"When trying to install using homebrew User does not have permission to write to  /usr/local/Cellar  and throws following error. Attempting…"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"Sublime Text"},"id":"6fe2e12d-478a-5f41-b5e7-6c3be8bcd03b","slug":"osx/sublime_text","timeToRead":1,"excerpt":"in  .bash_profile Create symbolic link from terminal Reference:   Stack Overflow: Opening Sublime Text on command line as subl on Mac OS?"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"Terminal Setup"},"id":"70543071-9605-5a34-bc2b-9ff592aa473c","slug":"osx/terminal","timeToRead":1,"excerpt":"Setting up your Terminal with zsh and iTerm2 I'll be combining a couple different tutorials that I will like to in the footnotes. As well as…"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"GREP"},"id":"22c90c10-8352-5290-a1d3-cf8fae8112e3","slug":"osx/unix-grep","timeToRead":1,"excerpt":"Using  grep  to search a file (ex:  * .log), and save to and new file (ex: NEW_FILE.log) The below command will remove all files in the…"}},{"node":{"frontmatter":{"category":"osx","description":null,"title":"Useful Commands"},"id":"35e7a295-0a78-558e-81bf-1d3386382e59","slug":"osx/useful_commands","timeToRead":1,"excerpt":"Jump to : TOC\n{:toc} Bash Profile Use  source  to update bash_profile without relaunching terminal Open with application Can also be used…"}}]}]}},"pageContext":{"frontmatter":{"title":"Notes","description":"A hidden page for all my development notes","keywords":"notes"},"relativePagePath":"/notes.mdx","titleType":"prepend","MdxNode":{"id":"a3b448f6-88da-59f6-aa93-3578036ead1c","children":[],"parent":"fc570aab-944c-5b36-b86d-54de34928c94","internal":{"content":"---\ntitle: Notes\ndescription: A hidden page for all my development notes\nkeywords: 'notes'\n---\n\nimport { Link, graphql } from 'gatsby';\n\n<PageDescription>\n\nThis is my ~~**Hidden**~~ notes landing page.\n\n</PageDescription>\n\n<>\n  {props.data.allMdx.group.map((group) => (\n    <div key={group.edges[0].node.id}>\n      <Title>{group.edges[0].node.frontmatter.category.toUpperCase()}</Title>\n      <CardGroup>\n        {group.edges.map((edge) => (\n          <MiniCard\n            key={edge.node.frontmatter.title}\n            title={edge.node.frontmatter.title}\n            href={edge.node.path}\n            actionIcon=\"arrowRight\"\n          />\n        ))}\n      </CardGroup>\n    </div>\n  ))}\n</>\n\n## TODO\n\nNeed to create a query that accepts un-categorized notes.\n\n```js\n// old query\nexport const pageQuery = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"notes\" } }) {\n      edges {\n        node {\n          id\n          childMdx {\n            frontmatter {\n              author\n              category\n              date\n              description\n              keywords\n              title\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n```\n\nexport const pageQuery = graphql`\n  {\n    allMdx {\n      group(field: frontmatter___category) {\n        edges {\n          node {\n            frontmatter {\n              category\n              description\n              title\n            }\n            id\n            slug\n            timeToRead\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n","type":"Mdx","contentDigest":"af22ef173414170b18cac465ce41e62f","owner":"gatsby-plugin-mdx","counter":151},"frontmatter":{"title":"Notes","description":"A hidden page for all my development notes","keywords":"notes"},"exports":{},"rawBody":"---\ntitle: Notes\ndescription: A hidden page for all my development notes\nkeywords: 'notes'\n---\n\nimport { Link, graphql } from 'gatsby';\n\n<PageDescription>\n\nThis is my ~~**Hidden**~~ notes landing page.\n\n</PageDescription>\n\n<>\n  {props.data.allMdx.group.map((group) => (\n    <div key={group.edges[0].node.id}>\n      <Title>{group.edges[0].node.frontmatter.category.toUpperCase()}</Title>\n      <CardGroup>\n        {group.edges.map((edge) => (\n          <MiniCard\n            key={edge.node.frontmatter.title}\n            title={edge.node.frontmatter.title}\n            href={edge.node.path}\n            actionIcon=\"arrowRight\"\n          />\n        ))}\n      </CardGroup>\n    </div>\n  ))}\n</>\n\n## TODO\n\nNeed to create a query that accepts un-categorized notes.\n\n```js\n// old query\nexport const pageQuery = graphql`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"notes\" } }) {\n      edges {\n        node {\n          id\n          childMdx {\n            frontmatter {\n              author\n              category\n              date\n              description\n              keywords\n              title\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n```\n\nexport const pageQuery = graphql`\n  {\n    allMdx {\n      group(field: frontmatter___category) {\n        edges {\n          node {\n            frontmatter {\n              category\n              description\n              title\n            }\n            id\n            slug\n            timeToRead\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n","fileAbsolutePath":"/home/runner/work/eng618.github.io/eng618.github.io/src/pages/notes.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}