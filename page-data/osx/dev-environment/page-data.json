{"componentChunkName":"component---content-notes-osx-dev-environment-mdx","path":"/osx/dev-environment/","result":{"pageContext":{"frontmatter":{"layout":"note","title":"Setting up your OSX development environment","updatedBy":"Eric Garcia","author":"Eric Garcia","last_updated":"2016-09-14T00:00:00.000Z","category":"osx","tags":"jenv,java,osx,brew"},"relativePagePath":"/home/runner/work/eng618.github.io/eng618.github.io/content/notes/osx/dev-environment.mdx","titleType":"prepend","MdxNode":{"id":"7b36db98-1ff2-55d5-b892-9a79322b9d6d","children":[],"parent":"e13fa7bd-d069-5d43-b7e5-2a3aa8ca4bee","internal":{"content":"---\nlayout: note\ntitle: Setting up your OSX development environment\nupdatedBy: Eric Garcia\nauthor: Eric Garcia\nlast_updated: 2016-09-14\ncategory: osx\ntags: 'jenv,java,osx,brew'\n---\n\nimport { Link } from 'gatsby';\n\nBack to notes <Link to=\"/notes\">landing page</Link>\n\n# Overview\n\nIn this document we will explore different aspects of setting up your Macbook for for development purposes. This includes but is not limited to setting up some essential software that will enable you to install some core aspects of MobileFirst.\n\n## Homebrew\n\nI like to use `sudu` as little as possible especially when installing software. To avoid this I use **Home Brew** for as much software installation as possible.\n\nSome very useful tools that can be installed with **Home Brew** `brew install COMAND`:\n\n- `bash-completion`\n- `node`\n- `nvm`\n- `rbenc`\n- `wget`\n\nFor trouble shooting brew issues see [Homebrew](./homebrew)\n\n### Updating bash and bash-completion\n\n[source][bash_completion_source]\n\nYou can update bash using homebrew. With `homebrew install bash`. It is also important to note that you will have to insure you **bash_profile** or **bash_rc** is updated to have the brew path first in your systems path. Once you have the updated bash installed you can install the latest bash-completion with `brew install bash-completion2`\n\nYou will need to update how you load the bash completion in your **[bash/bash_rc]profile** as follows.\n\n```shell\n####### Verify is bash_completon is installed #######\n\n # Add tab completion for bash completion 2\nif which brew > /dev/null && [ -f \"$(brew --prefix)/share/bash-completion/bash_completion\" ]; then\n  source \"$(brew --prefix)/share/bash-completion/bash_completion\";\n  export PS1='\\W$(__git_ps1) \\$ '\n\n# Fallback to bash completion\nelif [ -f /etc/bash_completion ]; then\n  source /etc/bash_completion;\n  export PS1='\\W$(__git_ps1) \\$ '\nfi;\n```\n\n**Note**: you can leave out the `export` of `PS1` if you choose. I just prefer a simple concise command prompt.\n\n[bash_completion_source]: https://troymccall.com/better-bash-4--completions-on-osx/\n\n## Java Version Management\n\nWhen it comes to Java management on a Mac there are several option in which you can chose. Below I will detail a few of them to chose from. First I will mention my favorite jenv\n\n### jenv\n\nThis software is available through Homebrew. It is well documented on it's <a href=\"https://github.com/gcuisinier/jenv\" target=\"blank\">github page</a>, . Let us discus a few caveats here. First and foremost you must add any installed versions of Java installed for jenv to be able to manage it. You can see a list of install by running the command `/usr/libexec/java_home -V`.\n\n- <a href=\"http://www.jenv.be/\" target=\"blank\">\n    jenv\n  </a> - use jenv to manage Java versions\n\n### Using .bash_profile\n\n<a\n  href=\"http://stackoverflow.com/questions/26252591/mac-os-x-and-multiple-java-versions/26252993#26252993\"\n  target=\"blank\"\n>\n  See this StackOverflow post\n</a> for simple java version management using your `.bash_profile`\n\n## Ruby Management\n\nrbenv is awesome!! `brew install rbenv`\n\nPlugins to consider\n\n- `git clone https://github.com/rbenv/rbenv-default-gems.git $(rbenv root)/plugins/rbenv-default-gems`\n- `git clone https://github.com/mislav/rbenv-user-gems.git \"$(rbenv root)/plugins/rbenv-user-gems\"`\n- `git clone https://github.com/rkh/rbenv-update.git \"$(rbenv root)/plugins/rbenv-update\"`\n- `git clone https://github.com/rkh/rbenv-whatis.git $(rbenv root)/plugins/rbenv-whatis`\n- `git clone https://github.com/rkh/rbenv-use.git $(rbenv root)/plugins/rbenv-use`\n\n## Text Editors\n\nThis is a very personal choice, and I can only detail the ones I'm familiar with.\n\n- Sublime Text 3: is a very customizable text editor with a largely supported development community.\n  _For usage details see the internal [Sublime Text 3](../osx-sublime_text) notes page.\n  _ <a href=\"https://www.sublimetext.com/\" target=\"blank\" >Sublime Homepage<i class=\"material-icons\">open_in_new</i></a>\n\n- Atom\n\n_If you would like to share your favorite please update this page._\n\n## Other\n\n<a\n  href=\"https://robots.thoughtbot.com/using-rbenv-to-manage-rubies-and-gems\"\n  target=\"blank\"\n>\n  Using rbenv to Manage Rubies and Gems\n</a>\n","type":"Mdx","contentDigest":"c36301637efd6d5ba936bdb3c6ccf3ef","owner":"gatsby-plugin-mdx","counter":190},"frontmatter":{"layout":"note","title":"Setting up your OSX development environment","updatedBy":"Eric Garcia","author":"Eric Garcia","last_updated":"2016-09-14T00:00:00.000Z","category":"osx","tags":"jenv,java,osx,brew"},"exports":{},"rawBody":"---\nlayout: note\ntitle: Setting up your OSX development environment\nupdatedBy: Eric Garcia\nauthor: Eric Garcia\nlast_updated: 2016-09-14\ncategory: osx\ntags: 'jenv,java,osx,brew'\n---\n\nimport { Link } from 'gatsby';\n\nBack to notes <Link to=\"/notes\">landing page</Link>\n\n# Overview\n\nIn this document we will explore different aspects of setting up your Macbook for for development purposes. This includes but is not limited to setting up some essential software that will enable you to install some core aspects of MobileFirst.\n\n## Homebrew\n\nI like to use `sudu` as little as possible especially when installing software. To avoid this I use **Home Brew** for as much software installation as possible.\n\nSome very useful tools that can be installed with **Home Brew** `brew install COMAND`:\n\n- `bash-completion`\n- `node`\n- `nvm`\n- `rbenc`\n- `wget`\n\nFor trouble shooting brew issues see [Homebrew](./homebrew)\n\n### Updating bash and bash-completion\n\n[source][bash_completion_source]\n\nYou can update bash using homebrew. With `homebrew install bash`. It is also important to note that you will have to insure you **bash_profile** or **bash_rc** is updated to have the brew path first in your systems path. Once you have the updated bash installed you can install the latest bash-completion with `brew install bash-completion2`\n\nYou will need to update how you load the bash completion in your **[bash/bash_rc]profile** as follows.\n\n```shell\n####### Verify is bash_completon is installed #######\n\n # Add tab completion for bash completion 2\nif which brew > /dev/null && [ -f \"$(brew --prefix)/share/bash-completion/bash_completion\" ]; then\n  source \"$(brew --prefix)/share/bash-completion/bash_completion\";\n  export PS1='\\W$(__git_ps1) \\$ '\n\n# Fallback to bash completion\nelif [ -f /etc/bash_completion ]; then\n  source /etc/bash_completion;\n  export PS1='\\W$(__git_ps1) \\$ '\nfi;\n```\n\n**Note**: you can leave out the `export` of `PS1` if you choose. I just prefer a simple concise command prompt.\n\n[bash_completion_source]: https://troymccall.com/better-bash-4--completions-on-osx/\n\n## Java Version Management\n\nWhen it comes to Java management on a Mac there are several option in which you can chose. Below I will detail a few of them to chose from. First I will mention my favorite jenv\n\n### jenv\n\nThis software is available through Homebrew. It is well documented on it's <a href=\"https://github.com/gcuisinier/jenv\" target=\"blank\">github page</a>, . Let us discus a few caveats here. First and foremost you must add any installed versions of Java installed for jenv to be able to manage it. You can see a list of install by running the command `/usr/libexec/java_home -V`.\n\n- <a href=\"http://www.jenv.be/\" target=\"blank\">\n    jenv\n  </a> - use jenv to manage Java versions\n\n### Using .bash_profile\n\n<a\n  href=\"http://stackoverflow.com/questions/26252591/mac-os-x-and-multiple-java-versions/26252993#26252993\"\n  target=\"blank\"\n>\n  See this StackOverflow post\n</a> for simple java version management using your `.bash_profile`\n\n## Ruby Management\n\nrbenv is awesome!! `brew install rbenv`\n\nPlugins to consider\n\n- `git clone https://github.com/rbenv/rbenv-default-gems.git $(rbenv root)/plugins/rbenv-default-gems`\n- `git clone https://github.com/mislav/rbenv-user-gems.git \"$(rbenv root)/plugins/rbenv-user-gems\"`\n- `git clone https://github.com/rkh/rbenv-update.git \"$(rbenv root)/plugins/rbenv-update\"`\n- `git clone https://github.com/rkh/rbenv-whatis.git $(rbenv root)/plugins/rbenv-whatis`\n- `git clone https://github.com/rkh/rbenv-use.git $(rbenv root)/plugins/rbenv-use`\n\n## Text Editors\n\nThis is a very personal choice, and I can only detail the ones I'm familiar with.\n\n- Sublime Text 3: is a very customizable text editor with a largely supported development community.\n  _For usage details see the internal [Sublime Text 3](../osx-sublime_text) notes page.\n  _ <a href=\"https://www.sublimetext.com/\" target=\"blank\" >Sublime Homepage<i class=\"material-icons\">open_in_new</i></a>\n\n- Atom\n\n_If you would like to share your favorite please update this page._\n\n## Other\n\n<a\n  href=\"https://robots.thoughtbot.com/using-rbenv-to-manage-rubies-and-gems\"\n  target=\"blank\"\n>\n  Using rbenv to Manage Rubies and Gems\n</a>\n","fileAbsolutePath":"/home/runner/work/eng618.github.io/eng618.github.io/content/notes/osx/dev-environment.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}