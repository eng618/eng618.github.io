{"version":3,"file":"component---src-pages-notes-mdx-1125034b27b9fe58d252.js","mappings":"iJAKA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,OAAQ,SACRC,IAAK,MACLC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,KAAsBT,EAAMU,aAAa,gBAACC,GAAmBV,EAEhE,OADKU,GAcP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAhBwBG,CAAqB,mBAAmB,GACvDC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBL,EAAiB,KAAMK,EAAAA,cAAoBf,EAAYG,EAAG,KAAM,cAAeY,EAAAA,cAAoBf,EAAYI,OAAQ,KAAM,UAAW,yBAA0B,KAAM,KAAMW,EAAAA,cAAoBf,EAAYK,IAAK,KAAMU,EAAAA,cAAoBf,EAAYM,KAAM,CAClUU,UAAW,gBACV,qZAAwZ,KAAMD,EAAAA,cAAoBf,EAAYO,GAAI,KAAM,QAAS,KAAMQ,EAAAA,cAAoBf,EAAYG,EAAG,KAAM,6DAA8D,KAAMY,EAAAA,cAAoBf,EAAYK,IAAK,KAAMU,EAAAA,cAAoBf,EAAYM,KAAM,CACtpBU,UAAW,eACV,6bAAgc,KAAMD,EAAAA,cAAoBf,EAAYK,IAAK,KAAMU,EAAAA,cAAoBf,EAAYM,KAAM,CACxhBU,UAAW,eACV,2XACL,CAKA,UAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,KAAsBT,EAAMU,YAC3E,OAAOS,EAAYH,EAAAA,cAAoBG,EAAWnB,EAAOgB,EAAAA,cAAoBjB,EAAmBC,IAAUD,EAAkBC,EAC9H,C","sources":["webpack://engarcia/./src/pages/notes.mdx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\n/*FIXME: Need to update this page to list notes again.*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Link, graphql} from 'gatsby';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {PageDescription} = _components;\n  if (!PageDescription) _missingMdxReference(\"PageDescription\", true);\n  return React.createElement(React.Fragment, null, React.createElement(PageDescription, null, React.createElement(_components.p, null, \"This is my \", React.createElement(_components.strong, null, \"Hidden\"), \" notes landing page.\")), \"\\n\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"<>\\n  {props.data.allMdx.group.map((group) => (\\n    <div key={group.edges[0].node.id}>\\n      <Title>{group.edges[0].node.frontmatter.category.toUpperCase()}</Title>\\n      <CardGroup>\\n        {group.edges.map((edge) => (\\n          <MiniCard key={edge.node.frontmatter.title} title={edge.node.frontmatter.title} actionIcon=\\\"arrowRight\\\" />\\n        ))}\\n      </CardGroup>\\n    </div>\\n  ))}\\n</>\\n\")), \"\\n\", React.createElement(_components.h2, null, \"TODO\"), \"\\n\", React.createElement(_components.p, null, \"Need to create a query that accepts un-categorized notes.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// old query\\nexport const pageQuery = graphql`\\n  query {\\n    allFile(filter: { sourceInstanceName: { eq: \\\"notes\\\" } }) {\\n      edges {\\n        node {\\n          id\\n          childMdx {\\n            frontmatter {\\n              author\\n              category\\n              date\\n              description\\n              keywords\\n              title\\n              tags\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"export const pageQuery = graphql`\\n  {\\n    allMdx {\\n      group(field: { frontmatter: { category: SELECT } }) {\\n        edges {\\n          node {\\n            frontmatter {\\n              category\\n              description\\n              title\\n            }\\n            id\\n            timeToRead\\n            excerpt\\n          }\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","pre","code","h2","_provideComponents","components","PageDescription","id","component","Error","_missingMdxReference","React","className","wrapper","MDXLayout"],"sourceRoot":""}