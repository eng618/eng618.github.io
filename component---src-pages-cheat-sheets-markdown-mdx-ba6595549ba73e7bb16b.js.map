{"version":3,"file":"component---src-pages-cheat-sheets-markdown-mdx-ba6595549ba73e7bb16b.js","mappings":"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","sources":["webpack://engarcia/./src/pages/cheat-sheets/markdown.mdx","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/eng618.github.io/eng618.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Headers</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Emphasis</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Lists</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Images</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Code and Syntax Highlighting</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Tables</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Blockquotes</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Inline HTML</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Horizontal Rule</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Line Breaks</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">YouTube Videos</AnchorLink>\n    </AnchorLinks>\n    <p>{`This is intended as a quick reference and showcase. For more complete info, see `}<a parentName=\"p\" {...{\n        \"href\": \"http://daringfireball.net/projects/markdown/\"\n      }}>{`John Gruber’s original spec`}</a>{` and the `}<a parentName=\"p\" {...{\n        \"href\": \"http://github.github.com/github-flavored-markdown/\"\n      }}>{`Github-flavored Markdown info page`}</a>{`.`}</p>\n    <p>{`Note that there is also a `}<a parentName=\"p\" {...{\n        \"href\": \"./Markdown-Here-Cheatsheet\"\n      }}>{`Cheatsheet specific to Markdown Here`}</a>{` if that’s what you’re looking for. You can also check out `}<a parentName=\"p\" {...{\n        \"href\": \"./Other-Markdown-Tools\"\n      }}>{`more Markdown tools`}</a>{`.`}</p>\n    <a name=\"headers\" />\n    <h2>{`Headers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n`}</code></pre>\n    <h1>{`H1`}</h1>\n    <h2>{`H2`}</h2>\n    <h3>{`H3`}</h3>\n    <h4>{`H4`}</h4>\n    <h5>{`H5`}</h5>\n    <h6>{`H6`}</h6>\n    <p>{`Alternatively, for H1 and H2, an underline-ish style:`}</p>\n    <h1>{`Alt-H1`}</h1>\n    <h2>{`Alt-H2`}</h2>\n    <a name=\"emphasis\" />\n    <h2>{`Emphasis`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`Emphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n`}</code></pre>\n    <p>{`Emphasis, aka italics, with `}<em parentName=\"p\">{`asterisks`}</em>{` or `}<em parentName=\"p\">{`underscores`}</em>{`.`}</p>\n    <p>{`Strong emphasis, aka bold, with `}<strong parentName=\"p\">{`asterisks`}</strong>{` or `}<strong parentName=\"p\">{`underscores`}</strong>{`.`}</p>\n    <p>{`Combined emphasis with `}<strong parentName=\"p\">{`asterisks and `}<em parentName=\"strong\">{`underscores`}</em></strong>{`.`}</p>\n    <p>{`Strikethrough uses two tildes. `}<del parentName=\"p\">{`Scratch this.`}</del></p>\n    <a name=\"lists\" />\n    <h2>{`Lists`}</h2>\n    <p>{`(In this example, leading and trailing spaces are shown with with dots: ⋅)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`1. First ordered list item\n2. Another item\n⋅⋅* Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n⋅⋅1. Ordered sub-list\n4. And another item.\n\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`First ordered list item`}</li>\n      <li parentName=\"ol\">{`Another item`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Unordered sub-list.`}</li>\n    </ul>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Actual numbers don’t matter, just that it’s a number`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Ordered sub-list`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`And another item.`}</p>\n        <p parentName=\"li\">{`You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).`}</p>\n        <p parentName=\"li\">{`To have a line break without a paragraph, you will need to use two trailing spaces.\nNote that this line is separate, but within the same paragraph.\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)`}</p>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Unordered list can use asterisks`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Or minuses`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">{`Or pluses`}</li>\n    </ul>\n    <a name=\"links\" />\n    <h2>{`Links`}</h2>\n    <p>{`There are two ways to create links.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links.\nhttp://www.example.com or <http://www.example.com> and sometimes\nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.google.com\"\n      }}>{`I’m an inline-style link`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.google.com\",\n        \"title\": \"Google's Homepage\"\n      }}>{`I’m an inline-style link with title`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.mozilla.org\"\n      }}>{`I’m a reference-style link`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../blob/master/LICENSE\"\n      }}>{`I’m a relative reference to a repository file`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://slashdot.org\"\n      }}>{`You can use numbers for reference-style link definitions`}</a></p>\n    <p>{`Or leave it empty and use the `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.reddit.com\"\n      }}>{`link text itself`}</a>{`.`}</p>\n    <p>{`URLs and URLs in angle brackets will automatically get turned into links.\n`}<a parentName=\"p\" {...{\n        \"href\": \"http://www.example.com\"\n      }}>{`http://www.example.com`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.example.com\"\n      }}>{`http://www.example.com`}</a>{` and sometimes\nexample.com (but not on Github, for example).`}</p>\n    <p>{`Some text to show that the reference links can follow later.`}</p>\n    <a name=\"images\" />\n    <h2>{`Images`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`Here's our logo (hover to see the title text):\n\nInline-style:\n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\n`}</code></pre>\n    <p>{`Here’s our logo (hover to see the title text):`}</p>\n    <p>{`Inline-style:\n`}<img parentName=\"p\" {...{\n        \"src\": \"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\",\n        \"alt\": \"alt text\",\n        \"title\": \"Logo Title Text 1\"\n      }}></img></p>\n    <p>{`Reference-style:\n`}<img parentName=\"p\" {...{\n        \"src\": \"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\",\n        \"alt\": \"alt text\",\n        \"title\": \"Logo Title Text 2\"\n      }}></img></p>\n    <a name=\"code\" />\n    <h2>{`Code and Syntax Highlighting`}</h2>\n    <p>{`Code blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers — like Github’s and `}<em parentName=\"p\">{`Markdown Here`}</em>{` — support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. `}<em parentName=\"p\">{`Markdown Here`}</em>{` supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the `}<a parentName=\"p\" {...{\n        \"href\": \"http://softwaremaniacs.org/media/soft/highlight/test.html\"\n      }}>{`highlight.js demo page`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`Inline \\`code\\` has \\`back-ticks around\\` it.\n`}</code></pre>\n    <p>{`Inline `}<inlineCode parentName=\"p\">{`code`}</inlineCode>{` has `}<inlineCode parentName=\"p\">{`back-ticks around`}</inlineCode>{` it.`}</p>\n    <p>{`Blocks of code are either fenced by lines with three back-ticks `}{`\\``}{`“`}<inlineCode parentName=\"p\">{`\\\\`}</inlineCode>{`, or are indented with four spaces. I recommend only using the fenced code blocks — they’re easier and only they support syntax highlighting.`}</p>\n    <pre lang=\"no-highlight\">\n  <code>\n    ```javascript var s = \"JavaScript syntax highlighting\"; alert(s); ```\n    ```python s = \"Python syntax highlighting\" print s ``` ``` No language\n    indicated, so no syntax highlighting. But let's throw in a\n    &lt;b&gt;tag&lt;/b&gt;. ```\n  </code>\n    </pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var s = 'JavaScript syntax highlighting';\nalert(s);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`s = \"Python syntax highlighting\"\nprint s\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`No language indicated, so no syntax highlighting in Markdown Here (varies on Github).\nBut let's throw in a <b>tag</b>.\n`}</code></pre>\n    <a name=\"tables\" />\n    <h2>{`Tables`}</h2>\n    <p>{`Tables aren’t part of the core Markdown spec, but they are part of GFM and `}<em parentName=\"p\">{`Markdown Here`}</em>{` supports them. They are an easy way of adding tables to your email — a task that would otherwise require copy-pasting from another application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`Colons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the\nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | \\`renders\\` | **nicely**\n1 | 2 | 3\n`}</code></pre>\n    <p>{`Colons can be used to align columns.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tables`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Are`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Cool`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`col 3 is`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`right-aligned`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`\\\\$1600`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`col 2 is`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`centered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`\\\\$12`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`zebra stripes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`are neat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`\\\\$1`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Markdown`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Less`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pretty`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`Still`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`renders`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`nicely`}</strong></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`3`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <a name=\"blockquotes\" />\n    <h2>{`Blockquotes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.`}</p>\n    </blockquote>\n    <p>{`Quote break.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can `}<em parentName=\"p\">{`put`}</em>{` `}<strong parentName=\"p\">{`Markdown`}</strong>{` into a blockquote.`}</p>\n    </blockquote>\n    <a name=\"html\" />\n    <h2>{`Inline HTML`}</h2>\n    <p>{`You can also use raw HTML in your Markdown, and it’ll mostly work pretty well.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`<dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n`}</code></pre>\n    <dl>\n  <dt>Definition list</dt>\n  <dd>Is something people use sometimes.</dd>\n  <dt>Markdown in HTML</dt>\n  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n    </dl>\n    <a name=\"hr\" />\n    <h2>{`Horizontal Rule`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`Three or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n`}</code></pre>\n    <p>{`Three or more…`}</p>\n    <hr></hr>\n    <p>{`Hyphens`}</p>\n    <hr></hr>\n    <p>{`Asterisks`}</p>\n    <hr></hr>\n    <p>{`Underscores`}</p>\n    <a name=\"lines\" />\n    <h2>{`Line Breaks`}</h2>\n    <p>{`My basic recommendation for learning how line breaks work is to experiment and discover — hit `}{`<`}{`Enter`}{`>`}{` once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend.`}</p>\n    <p>{`Here are some things to try out:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Here's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n`}</code></pre>\n    <p>{`Here’s a line for us to start with.`}</p>\n    <p>{`This line is separated from the one above by two newlines, so it will be a `}<em parentName=\"p\">{`separate paragraph`}</em>{`.`}</p>\n    <p>{`This line is also begins a separate paragraph, but…\nThis line is only separated by a single newline, so it’s a separate line in the `}<em parentName=\"p\">{`same paragraph`}</em>{`.`}</p>\n    <p>{`(Technical note: `}<em parentName=\"p\">{`Markdown Here`}</em>{` uses GFM line breaks, so there’s no need to use MD’s two-space line breaks.)`}</p>\n    <a name=\"videos\" />\n    <h2>{`YouTube Videos`}</h2>\n    <p>{`They can’t be added directly but you can add an image with a link to the video like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\n\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n`}</code></pre>\n    <p>{`Or, in pure Markdown, but losing the image sizing and border:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-no-highlight\"\n      }}>{`[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)\n`}</code></pre>\n    <p>{`Referencing a bug by #bugID in your git commit links it to the slip. For example #1.`}</p>\n    <hr></hr>\n    <p>{`License: `}<a parentName=\"p\" {...{\n        \"href\": \"https://creativecommons.org/licenses/by/3.0/\"\n      }}>{`CC-BY`}</a></p>\n    <hr></hr>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#links\"\n      }}>{`source`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";\nexport var text = \"PageHeader-module--text--Er2EO\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","lang","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}