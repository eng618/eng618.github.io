"use strict";(self.webpackChunkengarcia=self.webpackChunkengarcia||[]).push([[2618],{3555:function(e,t,a){a.d(t,{Z:function(){return v}});var l=a(7294),n=a(2749),r=a.n(n),s=a(1082),i=a(4715),c=a(2093),o=a(8086),d=a.n(o);var m=e=>{let{title:t,theme:a,tabs:n=[]}=e;return l.createElement("div",{className:d()("PageHeader-module--page-header--36a7c",{"PageHeader-module--with-tabs--bdb43":n.length,"PageHeader-module--dark-mode--58278":"dark"===a})},l.createElement("div",{className:"cds--grid"},l.createElement("div",{className:"cds--row"},l.createElement("div",{className:"cds--col-lg-12"},l.createElement("h1",{id:"page-title",className:"PageHeader-module--text--12bd8"},t)))))};var u=e=>{let{relativePagePath:t,repository:a}=e;const{site:{siteMetadata:{repository:n}}}=(0,s.useStaticQuery)("1364590287"),{baseUrl:r,subDirectory:i,branch:c}=a||n,o=r+"/edit/"+c+i+"/src/pages"+t;return r?l.createElement("div",{className:"cds--row EditLink-module--row--04499"},l.createElement("div",{className:"cds--col"},l.createElement("a",{className:"EditLink-module--link--203ae",href:o},"Edit this page on GitHub"))):null},p=a(6471),g=a(1721);let h=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){const{title:e,tabs:t,slug:a}=this.props,n=a.split("/").filter(Boolean).slice(-1)[0],i=t.map((e=>{const t=r()(e,{lower:!0,strict:!0}),i=t===n,c=new RegExp(n+"/?(#.*)?$"),o=a.replace(c,t);return l.createElement("li",{key:e,className:d()({"PageTabs-module--selected-item--68107":i},"PageTabs-module--list-item--d36e2")},l.createElement(s.Link,{className:"PageTabs-module--link--2b3ff",to:""+o},e))}));return l.createElement("div",{className:"PageTabs-module--tabs-container--09d7f"},l.createElement("div",{className:"cds--grid"},l.createElement("div",{className:"cds--row"},l.createElement("div",{className:"cds--col-lg-12 cds--col-no-gutter"},l.createElement("nav",{"aria-label":e},l.createElement("ul",{className:"PageTabs-module--list--c4bab"},i))))))},t}(l.Component);var f=h,k=a(2124),b=a(5387),N=a(4563);var E=e=>{let{date:t}=e;const a=new Date(t);return t?l.createElement(N.X2,{className:"last-modified-date-module--row--5c9a1"},l.createElement(N.sg,null,l.createElement("div",{className:"last-modified-date-module--text--a203d"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};var v=e=>{let{pageContext:t,children:a,location:n,Title:o}=e;const{frontmatter:d={},relativePagePath:g,titleType:h}=t,{tabs:N,title:v,theme:y,description:w,keywords:P,date:T}=d,{interiorTheme:x}=(0,b.Z)(),{site:{pathPrefix:Z}}=(0,s.useStaticQuery)("2456312558"),C=Z?n.pathname.replace(Z,""):n.pathname,R=N?C.split("/").filter(Boolean).slice(-1)[0]||r()(N[0],{lower:!0}):"",D=y||x;return l.createElement(c.Z,{tabs:N,homepage:!1,theme:D,pageTitle:v,pageDescription:w,pageKeywords:P,titleType:h},l.createElement(m,{title:o?l.createElement(o,null):v,label:"label",tabs:N,theme:D}),N&&l.createElement(f,{title:v,slug:C,tabs:N,currentTab:R}),l.createElement(k.Z,{padded:!0},a,l.createElement(u,{relativePagePath:g}),l.createElement(E,{date:T})),l.createElement(p.Z,{pageContext:t,location:n,slug:C,tabs:N,currentTab:R}),l.createElement(i.Z,null))}},7925:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return i},default:function(){return d}});var l=a(5987),n=(a(7294),a(498)),r=a(3555);const s=["components"],i={},c={_frontmatter:i},o=r.Z;function d(e){let{components:t}=e,a=(0,l.Z)(e,s);return(0,n.kt)(o,Object.assign({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Perform a “dry run” of ",(0,n.kt)("inlineCode",{parentName:"p"},"git clean"),". This will show you which files are going to be removed without actually doing it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -n\n")),(0,n.kt)("p",null,"Remove untracked files from the current directory. The ",(0,n.kt)("inlineCode",{parentName:"p"},"-f")," (force) flag is required unless the clean.requireForce configuration option is set to false (it’s true by default). This will not remove untracked folders or files specified by .gitignore."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -f\n")),(0,n.kt)("p",null,"Remove untracked files, but limit the operation to the specified path."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -f <path>\n")),(0,n.kt)("p",null,"Remove untracked files and untracked directories from the current directory."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -df\n")),(0,n.kt)("p",null,"Remove untracked files from the current directory as well as any files that Git usually ignores."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -xf\n")),(0,n.kt)("h2",null,"Example"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Edit some existing files"),(0,n.kt)("li",{parentName:"ul"},"Add some new files"),(0,n.kt)("li",{parentName:"ul"},"Realize you have no idea what you’re doing")),(0,n.kt)("p",null,"Undo changes in tracked files"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git reset --hard\n")),(0,n.kt)("p",null,"Remove untracked files"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clean -df\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---content-notes-git-clean-md-7f21c75b4ca9dbf3a44f.js.map