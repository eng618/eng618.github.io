{"version":3,"file":"component---content-notes-osx-terminal-mdx-f0a06562d1c99245b38c.js","mappings":"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","sources":["webpack://engarcia/./content/notes/osx/terminal.mdx","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/eng618.github.io/eng618.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`title: Terminal Setup\nauthor: ‘Eric Garcia’\ncategory: osx`}</p>\n\n\n    <h1>{`Setting up your Terminal with zsh and iTerm2`}</h1>\n    <p>{`I’ll be combining a couple different tutorials that I will like to in the footnotes. As well as some minor differences that I have updated for my personal use.`}</p>\n    <h2>{`Installing Xcode`}</h2>\n    <p>{`Ensure Xcode developer tools are installed with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`xcode-select —-install\n`}</code></pre>\n    <h2>{`Install Homebrew`}</h2>\n    <p>{`If homebrew is not installed do so now with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://brew.sh\"\n      }}>{`source`}</a></p>\n    <h2>{`Install iTerm2 via Homebrew`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`brew cask install iterm2\n`}</code></pre>\n    <h2>{`Install zsh`}</h2>\n    <p>{`Make sure you have the latest zsh installed`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`brew install zsh\n`}</code></pre>\n    <h2>{`Install Oh My Zsh`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n`}</code></pre>\n    <p>{`Once installed install your various plugins, by adding them to the plugins array in your `}<inlineCode parentName=\"p\">{`~/.zshrc`}</inlineCode>{`.`}</p>\n    <p>{`Here are the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins\"\n      }}>{`list of plugins`}</a>{` or check out the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins\"\n      }}>{`wiki`}</a></p>\n    <p>{`Keep you upgrade oh my zsh with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`upgrade_oh_my_zsh\n`}</code></pre>\n    <h2>{`Powerlevel9k`}</h2>\n    <p>{`Install `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Powerlevel9k/powerlevel9k/wiki/Install-Instructions#option-2-install-for-oh-my-zsh\"\n      }}>{`Powerlevel9k`}</a>{` theme. Since we are using Oh My Zsh, we can install it in the `}<strong parentName=\"p\">{`~/.oh-my-zsh/custom/themes/`}</strong>{` directory with the following.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`git clone https://github.com/bhilburn/powerlevel9k.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel9k\n`}</code></pre>\n    <p>{`then simply add the theme to you `}<strong parentName=\"p\">{`~/.zsh`}</strong>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`ZSH_THEME=\"powerlevel9k/powerlevel9k\"\n`}</code></pre>\n    <p>{`To include syntax highlighting of your shell install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/zsh-users/zsh-syntax-highlighting\"\n      }}>{`zsh-syntax-highlighting plugins`}</a>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`git clone https://github.com/zsh-users/zsh-syntax-highlighting.git \\${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n`}</code></pre>\n    <h2>{`Install fonts with gliphs`}</h2>\n    <p>{`I like to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/plex\"\n      }}>{`IBM Plex`}</a>{`, which is patch with powerline gliphs from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ryanoasis/nerd-fonts\"\n      }}>{`Nerd Fonts`}</a>{`.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ryanoasis/nerd-fonts#patched-fonts\"\n      }}>{`this list`}</a>{` of patched fonts to find the one you want`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`# Clone repo\ngit clone https://github.com/ryanoasis/nerd-fonts.git\n\ncd nerd-fonts\n\n# Install all fonts\n./install.sh\n\n# or\n\n# Install a single font\n./install.sh <FontName>\n\n# In my case I used\n./install.sh IBMPlexMono # which installs IBM Plex Mono\n`}</code></pre>\n    <h2>{`Other plugins and custimizations`}</h2>\n    <p>{`Install `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/athityakumar/colorls#installation\"\n      }}>{`colorls`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-zsh\"\n      }}>{`gem install colorls\n`}</code></pre>\n    <h2>{`Add Aliases`}</h2>\n    <hr></hr>\n    <h2>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.freecodecamp.org/news/how-to-configure-your-macos-terminal-with-zsh-like-a-pro-c0ab3f3c1156/\"\n        }}>{`How to Configure your macOs Terminal with Zsh like a Pro`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/robbyrussell/oh-my-zsh\"\n        }}>{`oh-my-zsh`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}