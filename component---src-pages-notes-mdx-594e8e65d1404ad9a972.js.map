{"version":3,"file":"component---src-pages-notes-mdx-594e8e65d1404ad9a972.js","mappings":"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","sources":["webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://engarcia/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://engarcia/./src/pages/notes.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"cds--grid\">\n      <div className=\"cds--row\">\n        <div className=\"cds--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageHeader-module--cds--assistive-text--23c82\";\nexport var cdsVisuallyHidden = \"PageHeader-module--cds--visually-hidden--8ea41\";\nexport var darkMode = \"PageHeader-module--dark-mode--58278\";\nexport var hideFeedback = \"PageHeader-module--hide-feedback--faaec\";\nexport var pageHeader = \"PageHeader-module--page-header--36a7c\";\nexport var showFeedback = \"PageHeader-module--show-feedback--10c5c\";\nexport var skeleton = \"PageHeader-module--skeleton--02800\";\nexport var text = \"PageHeader-module--text--12bd8\";\nexport var withTabs = \"PageHeader-module--with-tabs--bdb43\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`cds--row ${row}`}>\n      <div className=\"cds--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"EditLink-module--cds--assistive-text--fe6d8\";\nexport var cdsVisuallyHidden = \"EditLink-module--cds--visually-hidden--e1ea6\";\nexport var hideFeedback = \"EditLink-module--hide-feedback--62d77\";\nexport var link = \"EditLink-module--link--203ae\";\nexport var row = \"EditLink-module--row--04499\";\nexport var showFeedback = \"EditLink-module--show-feedback--8c836\";\nexport var skeleton = \"EditLink-module--skeleton--667f7\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"cds--grid\">\n          <div className=\"cds--row\">\n            <div className=\"cds--col-lg-12 cds--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"PageTabs-module--cds--assistive-text--6cf4e\";\nexport var cdsVisuallyHidden = \"PageTabs-module--cds--visually-hidden--aa208\";\nexport var hideFeedback = \"PageTabs-module--hide-feedback--218d0\";\nexport var link = \"PageTabs-module--link--2b3ff\";\nexport var list = \"PageTabs-module--list--c4bab\";\nexport var listItem = \"PageTabs-module--list-item--d36e2\";\nexport var selectedItem = \"PageTabs-module--selected-item--68107\";\nexport var showFeedback = \"PageTabs-module--show-feedback--dfe62\";\nexport var skeleton = \"PageTabs-module--skeleton--0ae39\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--09d7f\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var cdsAssistiveText = \"last-modified-date-module--cds--assistive-text--93e5f\";\nexport var cdsVisuallyHidden = \"last-modified-date-module--cds--visually-hidden--af2ee\";\nexport var hideFeedback = \"last-modified-date-module--hide-feedback--6a14a\";\nexport var row = \"last-modified-date-module--row--5c9a1\";\nexport var showFeedback = \"last-modified-date-module--show-feedback--4ddf7\";\nexport var skeleton = \"last-modified-date-module--skeleton--6b8da\";\nexport var text = \"last-modified-date-module--text--a203d\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/eng618.github.io/eng618.github.io/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Link, graphql } from 'gatsby';\nexport const pageQuery = graphql`\n  {\n    allMdx {\n      group(field: frontmatter___category) {\n        edges {\n          node {\n            frontmatter {\n              category\n              description\n              title\n            }\n            id\n            slug\n            timeToRead\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Title = makeShortcode(\"Title\");\nconst CardGroup = makeShortcode(\"CardGroup\");\nconst MiniCard = makeShortcode(\"MiniCard\");\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This is my `}<del parentName=\"p\"><strong parentName=\"del\">{`Hidden`}</strong></del>{` notes landing page.`}</p>\n    </PageDescription>\n    <>\n  {props.data.allMdx.group.map(group => <div key={group.edges[0].node.id}>\n      <Title mdxType=\"Title\">{group.edges[0].node.frontmatter.category.toUpperCase()}</Title>\n      <CardGroup mdxType=\"CardGroup\">\n        {group.edges.map(edge => <MiniCard key={edge.node.frontmatter.title} title={edge.node.frontmatter.title} href={edge.node.path} actionIcon=\"arrowRight\" mdxType=\"MiniCard\" />)}\n      </CardGroup>\n    </div>)}\n    </>\n    <h2>{`TODO`}</h2>\n    <p>{`Need to create a query that accepts un-categorized notes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// old query\nexport const pageQuery = graphql\\`\n  query {\n    allFile(filter: { sourceInstanceName: { eq: \"notes\" } }) {\n      edges {\n        node {\n          id\n          childMdx {\n            frontmatter {\n              author\n              category\n              date\n              description\n              keywords\n              title\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n\\`;\n`}</code></pre>\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","PageDescription","CardGroup","MiniCard","layoutProps","pageQuery","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","data","allMdx","group","edges","node","category","toUpperCase","edge","path","actionIcon","isMDXComponent"],"sourceRoot":""}